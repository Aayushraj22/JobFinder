<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= page %></title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
</head>
<body class="bg-dark text-white h-100 w-100">
    <nav class="navbar navbar-expand-lg navbar-dark-subtl bg-dark-subtle" >
        <div class="container-fluid">
          <a class="navbar-brand" href="/jobs">JobFinder</a>
          <button
            class="navbar-toggler"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <span class="navbar-toggler-icon"></span>
          </button>
          <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" href="/jobs">Jobs</a>
                  </li>
                  <% if (isAutherised) { %>
                    <li class="nav-item">
                      <a class="nav-link" href="/jobs/new-job">Create Job</a>
                    </li>
                  <% } %>
              <li class="nav-item dropdown">
                <a
                  class="nav-link dropdown-toggle"
                  href="#"
                  role="button"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                >
                  Recruiter
                </a>
                <ul class="dropdown-menu">
                  <% if (isAutherised) { %>
                    <li><a class="dropdown-item" href="/logout">Logout</a></li>
                  <% } else { %>
                    <li><a class="dropdown-item" href="/">Login</a></li>
                    <li><a class="dropdown-item" href="/register">Register</a></li>
                  <% } %>
                  
                </ul>
              </li>
            </ul>


            <form class="d-flex" role="search">
              <input
                class="form-control me-2"
                type="search"
                placeholder="Search"
                aria-label="Search"
              />
              <button class="btn btn-outline-success" type="submit">
                Search
              </button>
            </form>
          </div>

        </div>
      </nav>
      <div class="d-flex justify-content-center align-items-center vw-100 flex-column gap-3 " style="height: calc(100dvh - 60px)"><%-body%></div>

      <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
      crossorigin="anonymous"
    ></script>
    <script type="module">
      import { redirectToDestination} from '/utility.js'
      window.redirectToDestination = redirectToDestination;
   </script>

   <!-- applicant functions -->
   <script>
    const openEditForm = () => {
            const editform = document.getElementById('editForm')
            editform.classList.remove('d-none');
        }

        const openConfirmationModal = () => {

        }

        const closeEditForm = () => {
            const editform = document.getElementById('editForm')
            editform.classList.add('d-none');
        }

        const data = {}

        const updatingApplicantDetails = () => {
            console.log('update emthod called')
            const API_URL = window.location.pathname; // requesting put method on the same route

            fetch(API_URL, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
            })
            .then(response => response.json())
            .then(updatedData => {
                console.log('Resource updated successfully:', updatedData);
            })
            .catch(error => {
                console.error('Error updating resource:', error);
            });

        }

        const deleteApplicant = () => {
            const API_URL = window.location.pathname; // requesting put method on the same route

            fetch(API_URL, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            },
            })
            .then(response => response.json())
            .then(updatedData => {
                console.log('Resource Deleted successfully:', updatedData);
            })
            .catch(error => {
                console.error('Error updating resource:', error);
            });
        }

        const updateModalWithUpdatedFieldValues = () => {
            const modalBody = document.querySelector('.modal-body');
            const confirmBtn = document.querySelector('.modal-footer').children[1]
            const modalTitle = document.querySelector('.modal-title')

            modalTitle.textContent = 'Modifing Applicant Details'
            modalBody.innerHTML = ''

            confirmBtn.removeEventListener('click', updatingApplicantDetails)
            confirmBtn.removeEventListener('click', deleteApplicant)


            const prevData = {
                name: document.getElementById('applicantName').textContent,
                email: document.getElementById('applicantEmail').textContent,
                contact: document.getElementById('applicantContact').textContent,
            }

            const updateData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                contact: document.getElementById('contact').value,
            }


            for (const key in prevData) {
                if (prevData[key] !== updateData[key]) {
                    data[key] = updateData[key];
                }
            }

            if(Object.keys(data).length){
                for (const key in data) {
                    const p = document.createElement('p');
                    p.textContent = data[key];
                    modalBody.appendChild(p);
                    confirmBtn.removeAttribute('disabled')
                    confirmBtn.addEventListener('click', updatingApplicantDetails)
                }
            } else {
                const p = document.createElement('p')
                p.textContent = 'Nothing to update'
                modalBody.appendChild(p);
                confirmBtn.setAttribute('disabled',true)  
            }

            // console.log(window.location)
        }

        const deleteAlertInModal = () => {
            const modalBody = document.querySelector('.modal-body');
            const confirmBtn = document.querySelector('.modal-footer').children[1]
            modalBody.innerHTML = ''
            const modalTitle = document.querySelector('.modal-title')

            confirmBtn.removeEventListener('click', updatingApplicantDetails)
            confirmBtn.removeEventListener('click', deleteApplicant)

            confirmBtn.removeAttribute('disabled')

            modalTitle.textContent = 'Are you sure ?'

            modalBody.textContent = 'Because you will be permenanly deleted from this job applicant list, and our relationship will stop here.'

            confirmBtn.addEventListener('click', deleteApplicant)

        }
   </script>
</body>
</html>